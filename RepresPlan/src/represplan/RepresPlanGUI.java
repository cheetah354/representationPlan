/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package represplan;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author adrianopaulus
 * TODO recreate Project and creat own user Interface <-- Problems with Tabel 
 * <-- http://www.java2s.com/Code/Java/Swing-JFC/TablewithacustomTableModel.htm
 * <-- https://docs.oracle.com/javase/tutorial/uiswing/components/table.html
 */
public class RepresPlanGUI extends javax.swing.JFrame {

    /**
     * Creates new form RepresPlanGUI
     */
    DataBaseHandler db = new DataBaseHandler();
    int weekday = setDay();
    ArrayList<Integer> teacher = new ArrayList<>();
    int maxHour = 8;
    
    public RepresPlanGUI() {
        initComponents();      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jList1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new JTable(new MissingTeacher(teacher, getPlan(teacher), maxHour));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel1.setText("Stundenplan");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag" }));
        jComboBox1.setSelectedIndex(setDay());
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Fehlende Lehrer");

        jList1.setModel(allTeacher());
        getListItems();
        jScrollPane1.setViewportView(jList1);

        jTable3.setModel(new MissingTeacher(teacher, getPlan(teacher), maxHour));
        jScrollPane4.setViewportView(jTable3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(191, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //change weekday and refresh table
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        weekday = jComboBox1.getSelectedIndex();
        System.out.println("Weekday changed to: "+ weekday);
        
        //call refresh Table function
        refresh();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    //get missing Teachers
    public void getListItems(){
        jList1.addListSelectionListener(new ListSelectionListener(){
            
            @Override
            public void valueChanged(ListSelectionEvent arg0){
                if(!arg0.getValueIsAdjusting()){
                    ArrayList<String> dynamic = new ArrayList<>();
                    dynamic = (ArrayList<String>) jList1.getSelectedValuesList();
                    String convert;
                    
                    // clearTeacher
                    teacher.clear();
                    
                    for(int i = 0; i < dynamic.size(); i++){
                        convert = dynamic.get(i);
                        convert = convert.replaceAll("\\s", "");
                        convert = convert.replaceAll("[^\\d.]", "");
                        teacher.add(Integer.parseInt(convert));
                    }
                    //call refresh Table function
                    refresh();
                    System.out.println("Missing teachers updated;");
                }
            }
        
        });
    }
    
    //insert missing teachers in table
    public class MissingTeacher extends AbstractTableModel{
        private ArrayList<String> teachers = new ArrayList<>();
        private Object[][] data;
        private int maxHour;
        
        public MissingTeacher(ArrayList<Integer> teachers, Object[][] data2, int maxHour){
            for(int i = 0; i < teachers.size(); i++){
                this.teachers.add(teachers.get(i).toString());
            }
            //String[] test = (String[]) teachers.toArray();
            //Object[][] test = {teachers, {}};,
            this.data = data2.clone();
            this.maxHour = maxHour;
        }
        
        //getRows
        //getColumns
        @Override
        public int getColumnCount(){
            if(teachers.size() > 0){
                return teachers.size();
            }else{
                return 0;
            }
        }
        //get ValueAt
        //get ColumnName
        
        //getRows
        @Override
        public int getRowCount() {
            return maxHour;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            //Object data = new Object(1, 1);
            //data.
            return data[rowIndex][columnIndex];
        }
        
        @Override
        public Class getColumnClass(int c) {
            return getValueAt(0, c).getClass();
        }
        
        @Override
        public void setValueAt(Object value, int row, int col) {
            data[row][col] = value;
            fireTableCellUpdated(row, col);
            fireTableStructureChanged();
        }
        //get ValueAt
        //get ColumnName
       
    }
    
    //rewrite Data
    public Object[][] getPlan(ArrayList<Integer> teachers){
        ArrayList<ArrayList<String>> planOld = new ArrayList<ArrayList<String>>();
        ArrayList<ArrayList<String>> plan = new ArrayList<ArrayList<String>>();
        ArrayList<String> test = db.getPlan(0 , 3, 8);
        
        Object[][] planer = new Object[weekday][];
        
        //planer.
        
        plan.add(new ArrayList<>());
        
        for(int i = 0; i < teachers.size(); i++){
            plan.get(i).add(String.valueOf(teachers.get(i)/*.toString()*/));
            //get plan from each teacher
            planOld.add(db.getPlan(teachers.get(i), weekday, maxHour));
        }
        
        //convert Plan
        for(int i = 1; i <= weekday; i++){
            plan.add(new ArrayList<>());
            for(int j = 0; j < teachers.size(); j++){
                plan.get(i).add(planOld.get(j).get(i-1));
            }
            //planOld.add(db.getPlan(teachers.get(i), weekday, maxHour));
            //System.out.println(teachers.get(i));
            //db.getPlan(teachers.get(i), weekday, i)
        }
        
        //String[] test = (String[]) teachers.toArray();
            //Object[][] test = {teachers, {}};,
        
        for(int i = 0; i < weekday; i++){
            planer[i] = plan.get(i).toArray();
            //test[i] = (String[]) plan.get(i).toArray();
            //test.add(i, plan.get(i).toArray());
        }
        
        return planer;
    }
    
    public void refresh(){
        System.out.println("Refreshing...");
        getPlan(teacher);
        //refresh table
        AbstractTableModel model = new MissingTeacher(teacher, getPlan(teacher), weekday);
        jTable3.setModel(model);
        //model.fireTableChanged();
        model.fireTableDataChanged();
        model.fireTableStructureChanged();
        //jTable1.repaint();
        System.out.println("...complete");
    }
    
    
    
    //set Weekday - Dropddon
    public int setDay(){
        Calendar calendar = Calendar.getInstance();
        int day = calendar.get(Calendar.DAY_OF_WEEK);
        
        if(day < 7 && day > 1){
            day = day - 2;
        }else{
            day = 0;
        }
        
        return day;
    }
    
    public DefaultListModel allTeacher(){
        List<String> allTeachers = new ArrayList<String>();
        allTeachers = db.getAllTeacher();
        //String[] test = new
        DefaultListModel lm = new DefaultListModel();
        for(int i = 0; i < allTeachers.size(); i++){
            lm.add(i, allTeachers.get(i));
        }
        
        return lm;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RepresPlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RepresPlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RepresPlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RepresPlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new RepresPlanGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
